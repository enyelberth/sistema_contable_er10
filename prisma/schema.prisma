// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ingresos {
  id          Int        @id @default(autoincrement())
  fecha       DateTime   @default(now())
  description String
  monto       Float
  categoria   Categorias @relation(fields: [categoriaId], references: [id])
  categoriaId Int
}

model IngresoFijos {
  id          Int        @id @default(autoincrement())
  fecha       DateTime   @default(now())
  description String
  monto       Float
  categoria   Categorias @relation(fields: [categoriaId], references: [id])
  categoriaId Int
}

model Gasto {
  id          Int        @id @default(autoincrement())
  fecha       DateTime   @default(now())
  description String
  monto       Float
  categoria   Categorias @relation(fields: [categoriaId], references: [id])
  categoriaId Int
}

model GastoFijo {
  id          Int        @id @default(autoincrement())
  fecha       DateTime   @default(now())
  description String
  monto       Float
  categoria   Categorias @relation(fields: [categoriaId], references: [id])
  categoriaId Int
}

model Categorias {
  id    Int      @id @default(autoincrement())
  name  String
  type  Type     @default(Ganancias)
  fecha DateTime @default(now())

  // Relaciones
  ingresos     Ingresos[] // Relaci贸n uno a muchos
  ingresoFijos IngresoFijos[] // Relaci贸n uno a muchos
  gastos       Gasto[] // Relaci贸n uno a muchos
  gastosFijos  GastoFijo[] // Relaci贸n uno a muchos
}

model Usuarios {
  id          Int      @id @default(autoincrement())
  fecha       DateTime
  description String
  monto       Float
}

enum Type {
  Gasto
  Ganancias
}
